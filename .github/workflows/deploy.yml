# .github/workflows/deploy.yml

name: Deploy PhoText to Production

# Trigger this workflow on every push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  # Job to deploy the backend Supabase Edge Functions
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy Supabase functions
        run: supabase functions deploy --project-ref ${{ secrets.SUPABASE_PROJECT_ID }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          # The password is required for linking but not directly for function deployment.
          # It's good practice to have it for the CLI to work correctly.
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

  # Job to deploy the frontend to Vercel
  deploy-frontend:
    runs-on: ubuntu-latest
    # This job should run after the backend is successfully deployed
    needs: deploy-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Project Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        # Vercel automatically detects the framework and builds it.
        # We specify the working directory for our frontend code.
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Deploy Project to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend
